-- Create Users table
CREATE TABLE USERS (
    USER_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    FIRST_NAME TEXT NOT NULL,
    LAST_NAME TEXT NOT NULL,
    USERNAME TEXT UNIQUE NOT NULL,
    PASSWORD TEXT NOT NULL
);

-- Create Schools table
CREATE TABLE SCHOOLS (
    SCHOOL_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME TEXT NOT NULL,
    TYPE TEXT NOT NULL,
    LOCATION TEXT NOT NULL,
    FOUNDED_YEAR INTEGER
);

-- Create Companies table
CREATE TABLE COMPANIES (
    COMPANY_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME TEXT NOT NULL,
    INDUSTRY TEXT NOT NULL,
    LOCATION TEXT NOT NULL
);

-- Create UserConnections table to represent mutual connections between users
CREATE TABLE USERCONNECTIONS (
    USER1_ID INTEGER,
    USER2_ID INTEGER,
    PRIMARY KEY (USER1_ID, USER2_ID),
    FOREIGN KEY (USER1_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (USER2_ID) REFERENCES USERS(USER_ID)
);

-- Create UserSchools table to represent user affiliations with schools
CREATE TABLE USERSCHOOLS (
    USER_ID INTEGER,
    SCHOOL_ID INTEGER,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    DEGREE TEXT,
    PRIMARY KEY (USER_ID, SCHOOL_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (SCHOOL_ID) REFERENCES SCHOOLS(SCHOOL_ID)
);

-- Create UserCompanies table to represent user affiliations with companies
CREATE TABLE USERCOMPANIES (
    USER_ID INTEGER,
    COMPANY_ID INTEGER,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    TITLE TEXT,
    PRIMARY KEY (USER_ID, COMPANY_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (COMPANY_ID) REFERENCES COMPANIES(COMPANY_ID)
);